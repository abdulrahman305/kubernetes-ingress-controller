name: CI
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  pull_request_target:
    branches: [ "main" ]

env:
  GO_VERSION: '1.23'
  DOCKER_BUILDX_PLATFORMS: linux/amd64,linux/arm64

jobs:

  changes:
    runs-on: ubuntu-latest
    outputs:
      charts: ${{ steps.filter.outputs.charts }}
      chartyaml: ${{ steps.filter.outputs.chartyaml }}
      go: ${{ steps.filter.outputs.go }}
      tag: ${{ steps.filter.outputs.tag }}
      tests: ${{ steps.filter.outputs.tests }}
      make: ${{ steps.filter.outputs.make }}
    permissions:
      contents: read
      pull-requests: read
    steps:
    - name: Checkout repo
      uses: actions/checkout@v3
    - id: filter
      uses: dorny/paths-filter@v2.11.1
      with:
        filters: |
          chartyaml:
            - 'helm/ngrok-operator/Chart.yaml'
          charts:
            - 'helm/ngrok-operator/**'
            - 'scripts/e2e.sh'
          go:
            - '**.go'
            - 'go.mod'
            - 'go.sum'
            - 'cmd/**'
            - 'internal/**'
            - 'pkg/**'
            - 'Dockerfile'
            - 'scripts/e2e.sh'
            - 'VERSION'
          tests:
            - 'test/**'
          make:
            - 'Makefile'
          tag:
            - 'VERSION'

  # Make sure that Kubebuilder autogenerated files are up to date.
  kubebuilder-diff:
    name: Kubebuilder Diff
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: ${{ env.GO_VERSION }}
    - name: Generate manifests
      run: make manifests
    - name: Fail if there are uncommited manifest changes
      run: |
        git diff --exit-code
        git diff --cached --exit-code

  build-images:
    name: Build Images
    needs:
    - changes
    - kubebuilder-diff
    if: needs.changes.outputs.go == 'true'
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
    - uses: actions/checkout@v3
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2
    - id: buildx-setup
      name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      with:
        platforms: ${{ env.DOCKER_BUILDX_PLATFORMS }}
    - name: Build
      uses: docker/build-push-action@v3
      with:
        context: .
        platforms: ${{ steps.buildx-setup.outputs.platforms }}
        push: false
        tags: ngrok/ngrok-operator:latest

  go-mod-tidy:
    name: Go Mod Tidy Check
    runs-on: ubuntu-latest
    needs:
    - changes
    if: |
      (needs.changes.outputs.go == 'true')
    steps:
    - uses: actions/checkout@v3
    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: ${{ env.GO_VERSION }}
    - run: go mod tidy
    - run: git diff --exit-code go.mod
    - run: git diff --exit-code go.sum


  build-and-test:
    runs-on: ubuntu-latest
    needs:
    - changes
    - kubebuilder-diff
    if: |
      (needs.changes.outputs.go == 'true') ||
      (needs.changes.outputs.charts == 'true') ||
      (needs.changes.outputs.chartyaml == 'true') ||
      (needs.changes.outputs.tests == 'true') ||
      (needs.changes.outputs.make == 'true')
    steps:
    - uses: actions/checkout@v3

    - uses: debianmaster/actions-k3s@master
      id: k3s
      with:
        version: 'latest'
    - run: |
        kubectl get nodes
        kubectl get pods -A

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: ${{ env.GO_VERSION }}

    - name: Build
      run: make build

    - name: Lint
      run: make lint

    - name: Setup Envtest
      run: make envtest

    - name: Test
      run: make test

    - name: Build the Docker image
      run: make docker-build

    - name: Deploy controller to local cluster
      env:
        NGROK_API_KEY: ${{ github.repository == 'ngrok/ngrok-operator' && secrets.NGROK_CI_API_KEY || 'fake-api-key' }}
        NGROK_AUTHTOKEN: ${{ github.repository == 'ngrok/ngrok-operator' && secrets.NGROK_CI_AUTHTOKEN || 'fake-authtoken' }}
        E2E_BINDING_NAME: k8s/e2e-${{ env.GITHUB_RUN_ID }}
      run: |
        # create some namespaces for bindings tests
        kubectl create ns e2e || true

        # deploy ngrok-op for e2e tests
        make deploy_for_e2e

    - name: Check if controller is up
      run: |
        kubectl get nodes
        kubectl get pods -A

    - name: Install cosign
      uses: sigstore/cosign-installer@dc72c7d5c4d10cd6bcb8cf6e3fd625a9e5e537da # v3.7.0
    - name: Install chainsaw
      uses: kyverno/action-install-chainsaw@d311eacde764f806c9658574ff64c9c3b21f8397 # v0.2.11
      with:
        verify: true

    - name: Run e2e tests
      if: "github.repository == 'ngrok/ngrok-operator'"
      run: |
        make e2e-tests

    # best effort to remove ngrok k8s resources from cluster
    # this allows our finalizers to delete upstream ngrok API resources too
    # that hopefully helps not pollute our ngrok-operator-ci account
    - name: Cleanup e2e tests
      run: |
        make e2e-clean

  helm:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    needs: [changes]
    if: needs.changes.outputs.charts == 'true'
    steps:
    - uses: actions/checkout@v3
    - uses: azure/setup-helm@v3
      with:
        version: v3.10.0
    - name: Lint Helm Chart
      run: make helm-lint
    - name: Helm Unit Tests
      run: make helm-test
