name: Tests
on:
  push:
    branches: [ "main" ]
  pull_request_target:
    branches: [ "main" ]
  # For testing/iteration on these e2e tests
  # 1. Create a branch and PR in the ngrok/ngrok-operator repo
  # 2. uncomment the block below
  # 3. Push a PR
  # pull_request:
  #   branches: [ "main" ]

env:
  GO_VERSION: '1.23'
  DOCKER_BUILDX_PLATFORMS: linux/amd64,linux/arm64

jobs:
  changes:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: read
    outputs:
      charts: ${{ steps.changes.outputs.charts }}
      chartyaml: ${{ steps.changes.outputs.chartyaml }}
      go: ${{ steps.changes.outputs.go }}
      tag: ${{ steps.changes.outputs.tag }}
      tests: ${{ steps.changes.outputs.tests }}
      make: ${{ steps.changes.outputs.make }}
    steps:
    - uses: actions/checkout@v3
    - uses: "./.github/actions/changes"
      id: changes

  build-and-test-e2e:
    runs-on: ubuntu-latest
    needs:
    - changes
    # Runs If
    # - commit is pushed to main on ngrok/ngrok-operator repo (i.e. the PR is merged)
    # - PR contains the label 'safe to test' and changes to go code, charts, chartyaml, tests, or makefile
    if: |
      (github.event_name == 'push' && github.ref_name == 'main')
      ||
      (
        contains(github.event.pull_request.labels.*.name, 'safe to test')
        && (
          (needs.changes.outputs.go == 'true') ||
          (needs.changes.outputs.charts == 'true') ||
          (needs.changes.outputs.chartyaml == 'true') ||
          (needs.changes.outputs.tests == 'true') ||
          (needs.changes.outputs.make == 'true')
        )
      )
    permissions:
      contents: read
      pull-requests: read
    steps:
    # checkout the repo at the PR's head sha (inside the fork's commits)
    # this allows forks to test changes to the go code and e2e tests
    - uses: actions/checkout@v3
      with:
        ref: ${{ github.event.pull_request.head.sha }}
    - uses: "./.github/actions/build-and-test"
      with:
        run-e2e: true
        go-version: ${{ env.GO_VERSION }}
        ngrok-api-key: ${{ secrets.NGROK_CI_API_KEY }}
        ngrok-authtoken: ${{ secrets.NGROK_CI_AUTHTOKEN }}
